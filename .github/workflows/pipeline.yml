# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy

on:
  push:
    branches: [ "main" ]

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  EDAMAM_NUTRITION_API_KEY: ${{ secrets.EDAMAM_NUTRITION_API_KEY }}
  EDAMAM_NUTRITION_APP_ID: ${{ secrets.EDAMAM_NUTRITION_APP_ID }}
  EDAMAM_RECIPE_API_KEY: ${{ secrets.EDAMAM_RECIPE_API_KEY }}
  EDAMAM_RECIPE_APP_ID: ${{ secrets.EDAMAM_RECIPE_APP_ID }}
  GIT_CLIENT_ID: ${{ secrets.GIT_CLIENT_ID }}
  GIT_CLIENT_SECRET: ${{ secrets.GIT_CLIENT_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  JWT_RESET_SECRET: ${{ secrets.JWT_RESET_SECRET }}
  MY_SECRET_KEY: ${{ secrets.MY_SECRET_KEY }}
  OTP_SECRET: ${{ secrets.OTP_SECRET }}
  TRANSPORTER_GMAIL: ${{ secrets.TRANSPORTER_GMAIL }}
  TRANSPORTER_PASSWORD: ${{ secrets.TRANSPORTER_PASSWORD }}
  VITE_DEVELOPMENT_SERVER: ${{ secrets.VITE_DEVELOPMENT_SERVER }}
  VITE_GITHUB_CLIENT_ID: ${{ secrets.VITE_GITHUB_CLIENT_ID }}
  VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
  VITE_HTTPS_SERVER: ${{ secrets.VITE_HTTPS_SERVER }}
  VITE_NODE_ENV: ${{ secrets.VITE_NODE_ENV }}

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Install dependencies and run tests for the client application
      - name: Install and Test Client
        working-directory: ./client
        run: |
          npm install
          export VITE_DEVELOPMENT_SERVER=$VITE_DEVELOPMENT_SERVER
          export VITE_GITHUB_CLIENT_ID=$VITE_GITHUB_CLIENT_ID
          export VITE_GOOGLE_CLIENT_ID=$VITE_GOOGLE_CLIENT_ID
          export VITE_HTTPS_SERVER=$VITE_HTTPS_SERVER
          export VITE_NODE_ENV=$VITE_NODE_ENV
          npm run test
          
      # Install dependencies and run tests for the server application
      - name: Install and Test Server
        working-directory: ./server
        run: |
          npm install
          export DATABASE_URL=$DATABASE_URL
          export EDAMAM_NUTRITION_API_KEY=$EDAMAM_NUTRITION_API_KEY
          export EDAMAM_NUTRITION_APP_ID=$EDAMAM_NUTRITION_APP_ID
          export EDAMAM_RECIPE_API_KEY=$EDAMAM_RECIPE_API_KEY
          export EDAMAM_RECIPE_APP_ID=$EDAMAM_RECIPE_APP_ID
          export GIT_CLIENT_ID=$GIT_CLIENT_ID
          export GIT_CLIENT_SECRET=$GIT_CLIENT_SECRET
          export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
          export GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
          export JWT_RESET_SECRET=$JWT_RESET_SECRET
          export MY_SECRET_KEY=$MY_SECRET_KEY
          export OTP_SECRET=$OTP_SECRET
          export TRANSPORTER_GMAIL=$TRANSPORTER_GMAIL
          export TRANSPORTER_PASSWORD=$TRANSPORTER_PASSWORD
          npm run test

      # Build a Docker image for the client application
      - name: Build Client Docker Image
        working-directory: ./client
        # Build image with tag rakeshpotnuru/productivity-app:client
        run: |
          docker build -t wad2-client:client-${{github.run_number}} .

      # Build a Docker image for the server application
      - name: Build Server Docker Image
        working-directory: ./server
          # Build image with tag rakeshpotnuru/productivity-app:server
        run: |
          docker build -t wad2-server:server-${{github.run_number}} .

      # Build a Docker image for the NGINX reverse proxy
      - name: Build NGINX Docker Image
        working-directory: ./config
        # Build image with tag rakeshpotnuru/productivity-app:nginx
        run: |
          docker build -t wad2-nginx:nginx-${{github.run_number}} -t wad2-nginx:nginx-latest .

      # Login to Docker Hub using credentials from repository secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push wad2-client:client-${{github.run_number}}
          docker push wad2-server:server-${{github.run_number}}
          docker push wad2-nginx:nginx-${{github.run_number}}
          docker push wad2-client:client-latest
          docker push wad2-server:server-latest
          docker push wad2-nginx:nginx-latest

